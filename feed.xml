<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://studhamza.github.io/hamza-folio/feed.xml" rel="self" type="application/atom+xml"/><link href="https://studhamza.github.io/hamza-folio/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-05-30T05:59:37+00:00</updated><id>https://studhamza.github.io/hamza-folio/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">FM Receiver with GNU Radio- Week 1</title><link href="https://studhamza.github.io/hamza-folio/blog/2025/gnu/" rel="alternate" type="text/html" title="FM Receiver with GNU Radio- Week 1"/><published>2025-05-30T01:00:00+00:00</published><updated>2025-05-30T01:00:00+00:00</updated><id>https://studhamza.github.io/hamza-folio/blog/2025/gnu</id><content type="html" xml:base="https://studhamza.github.io/hamza-folio/blog/2025/gnu/"><![CDATA[<p>This summer, I am contributing to GNU Radio as part of <strong>2025 GSOC</strong>. I will be working with the <strong>GNU Radio</strong> community on a project that combines signal processing, software-defined radio, and user-focused design: <strong>Developing a user-friendly FM Broadcast Receiver Application with RDS and Spectrum Scanning</strong>.</p> <hr/> <h2 id="about-the-project">About the Project</h2> <p>The goal is to build a <strong>plug-and-play FM receiver application</strong> that works across various SDR (Software Defined Radio) hardware. This includes:</p> <ul> <li>Receiving and decoding FM radio using GNU Radio flowgraphs</li> <li>Integrating <strong>RDS (Radio Data System)</strong> to extract metadata like station info and song titles</li> <li>Implementing <strong>spectrum scanning</strong> to list active FM channels</li> <li>Providing a <strong>debug view</strong> with real-time plots and visualizations</li> <li>Supporting <strong>recording</strong> and <strong>multi-stream</strong> listening</li> <li>Adding advanced features like <strong>SCA (Subsidiary Communications Authorization)</strong> decoding</li> </ul> <p>The application will be built using <strong>PyQt for the GUI</strong>, and <strong>GNU Radio</strong> for backend signal processing.</p> <hr/> <h2 id="the-bonding-period-plan">The Bonding Period Plan</h2> <p>Between <strong>May 8 and June 1</strong>, I was juggling university finals but still managed to chat with my mentors Andrej and Sebastian about the project details.</p> <p>This time was great for detailing the plan and trying out the gr-rds.</p> <p>A small problem I faced was that RDS is not popular in Egypt; a lot of stations do not have it. But that is no big issue since I can work with already available recordings or connect to a Web SDR.</p> <hr/> <h2 id="whats-next">What’s Next?</h2> <p>Starting <strong>June 2</strong>, the coding period will start and last until April. Next weeks focus is on designing the GUI using the Python library <a href="https://github.com/spyder-ide/qtpy">qtpy</a>.</p> <p>I’ll be sharing updates along the way — on my <a href="https://studhamza.github.io/hamza-folio/blog/2025/gnu">blog</a></p> <hr/> <p><strong>Links</strong></p> <ul> <li><a href="https://github.com/StudHamza">My GitHub</a></li> <li><a href="https://studhamza.github.io/hamza-folio/">My Portfolio</a></li> <li><a href="https://github.com/bastibl/gr-rds">gr-rds</a></li> </ul> <p>Thank you to my mentors and the GNU Radio community.</p> <hr/>]]></content><author><name></name></author><category term="gsoc-updates"/><category term="gnuradio"/><summary type="html"><![CDATA[Announcing my acceptance to Google Summer of Code 2025 and the exciting FM receiver project I'll be working on.]]></summary></entry><entry><title type="html">IBM Watsonx.ai Hackathon</title><link href="https://studhamza.github.io/hamza-folio/blog/2024/ibm/" rel="alternate" type="text/html" title="IBM Watsonx.ai Hackathon"/><published>2024-09-25T01:00:00+00:00</published><updated>2024-09-25T01:00:00+00:00</updated><id>https://studhamza.github.io/hamza-folio/blog/2024/ibm</id><content type="html" xml:base="https://studhamza.github.io/hamza-folio/blog/2024/ibm/"><![CDATA[<p>IBM watsonx.ai next generation enterprise studio for AI builders to train, validate, tune and deploy AI models. In this hackathon, I used the granite foundation model zero shot prompting to create a chatbot that is able to analyize unstructured business documents, (pdfs). I used React for frotend and flask for backend, the flask app is connected to the IBM API to process query and responses. The files are preprocessed before sending it to the granite FM.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/hamza-folio/assets/img/IBM_cert-480.webp 480w,/hamza-folio/assets/img/IBM_cert-800.webp 800w,/hamza-folio/assets/img/IBM_cert-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/hamza-folio/assets/img/IBM_cert.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="competion-posts"/><category term="code"/><summary type="html"><![CDATA[My first hackathon experince]]></summary></entry></feed>